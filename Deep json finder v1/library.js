class JSONPathFinder{constructor(){this.paths=[]}parseTargetValue(t){const e=t.trim();return"true"===e||"false"!==e&&(isNaN(e)||""===e?e:Number(e))}findInDeepStructure(t,e,a=[],n=[],r="both"){return Array.isArray(t)?t.forEach(((t,s)=>{const p=[...a,s];s!==e||"both"!==r&&"index"!==r||n.push({path:p,type:"index",found:s}),t!==e||"both"!==r&&"value"!==r||n.push({path:p,type:"value",found:t}),(Array.isArray(t)||t&&"object"==typeof t)&&this.findInDeepStructure(t,e,p,n,r)})):t&&"object"==typeof t&&Object.entries(t).forEach((([t,s])=>{const p=[...a,t];t!==e||"both"!==r&&"key"!==r||n.push({path:p,type:"key",found:t}),s!==e||"both"!==r&&"value"!==r||n.push({path:p,type:"value",found:s}),(Array.isArray(s)||s&&"object"==typeof s)&&this.findInDeepStructure(s,e,p,n,r)})),n}findPaths(t,e,a="both"){const n=this.parseTargetValue(e);return this.paths=this.findInDeepStructure(t,n,[],[],a),this.paths}formatPath(t,e){return t.map(((t,e)=>{const a="number"==typeof t;return 0===e?'<span class="text-purple-400">top</span>':`<span class="text-blue-400"> -> </span><span class="${a?"text-green-400":"text-yellow-400"}">${t}</span>`})).join("")+`<span class="ml-2">\n                    <span class="search-type-badge ${"value"===e?"type-value":"key"===e?"type-key":"type-index"}">\n                        ${"value"===e?"💎 VALUE":"key"===e?"🔑 KEY":"📍 INDEX"}\n                    </span>\n                    <span class="text-gray-300">= ${JSON.stringify(t.length>0?t[t.length-1]:"root")}</span>\n                </span>`}generatePathFlowchart(t,e,a){let n="graph TD\n",r=`Start_${e}`;n+=`    ${r}[Start: top]\n`,t.forEach(((t,a)=>{const s=`P${e}_S${a}`;n+=`    ${s}["${"number"==typeof t?`Index: ${t}`:`Key: "${t}"`}"]\n`,n+=`    ${r} --\x3e ${s}\n`,r=s}));const s=`Target_${e}`;return n+=`    ${s}["${"value"===a?"💎":"key"===a?"🔑":"📍"} ${a.toUpperCase()}: ${JSON.stringify(t.length>0?t[t.length-1]:"root")}"]\n`,n+=`    ${r} --\x3e ${s}\n`,n}getPaths(){return this.paths}clear(){this.paths=[]}getPathCount(){return this.paths.length}getPath(t){return this.paths[t]||null}}
